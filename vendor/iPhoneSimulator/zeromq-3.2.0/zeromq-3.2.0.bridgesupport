<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='PollItem_' type='{_PollItem_=&quot;socket&quot;^v&quot;fd&quot;i&quot;events&quot;s&quot;revents&quot;s}'>
<field name='socket' declared_type='void*' type='^v'/>
<field name='fd' declared_type='int' type='i'/>
<field name='events' declared_type='short' type='s'/>
<field name='revents' declared_type='short' type='s'/>
</struct>
<struct name='Zmq_msg_t' type='{_Zmq_msg_t=&quot;_&quot;[32C]}'>
<field name='_' declared_type='unsigned char*' type='[32C]'/>
</struct>
<struct name='zmq_msg_t' type='{_zmq_msg_t=&quot;_&quot;[32C]}'>
<field name='_' declared_type='unsigned char*' type='[32C]'/>
</struct>
<struct name='zmq_pollitem_t' type='{_zmq_pollitem_t=&quot;socket&quot;^v&quot;fd&quot;i&quot;events&quot;s&quot;revents&quot;s}'>
<field name='socket' declared_type='void*' type='^v'/>
<field name='fd' declared_type='int' type='i'/>
<field name='events' declared_type='short' type='s'/>
<field name='revents' declared_type='short' type='s'/>
</struct>
<enum value='156384763' name='EFSM'/>
<enum value='156384766' name='EMTHREAD'/>
<enum value='156384764' name='ENOCOMPATPROTO'/>
<enum value='156384765' name='ETERM'/>
<enum value='4' name='ZMQ_AFFINITY'/>
<enum value='19' name='ZMQ_BACKLOG'/>
<enum value='5' name='ZMQ_DEALER'/>
<enum value='1' name='ZMQ_DONTWAIT'/>
<enum value='15' name='ZMQ_EVENTS'/>
<enum value='32' name='ZMQ_EVENT_ACCEPTED'/>
<enum value='64' name='ZMQ_EVENT_ACCEPT_FAILED'/>
<enum value='16' name='ZMQ_EVENT_BIND_FAILED'/>
<enum value='128' name='ZMQ_EVENT_CLOSED'/>
<enum value='256' name='ZMQ_EVENT_CLOSE_FAILED'/>
<enum value='1' name='ZMQ_EVENT_CONNECTED'/>
<enum value='2' name='ZMQ_EVENT_CONNECT_DELAYED'/>
<enum value='4' name='ZMQ_EVENT_CONNECT_RETRIED'/>
<enum value='512' name='ZMQ_EVENT_DISCONNECTED'/>
<enum value='8' name='ZMQ_EVENT_LISTENING'/>
<enum value='33' name='ZMQ_FAIL_UNROUTABLE'/>
<enum value='14' name='ZMQ_FD'/>
<enum value='2' name='ZMQ_FORWARDER'/>
<enum value='156384712' name='ZMQ_HAUSNUMERO'/>
<enum value='5' name='ZMQ_IDENTITY'/>
<enum value='1' name='ZMQ_IO_THREADS'/>
<enum value='1' name='ZMQ_IO_THREADS_DFLT'/>
<enum value='31' name='ZMQ_IPV4ONLY'/>
<enum value='32' name='ZMQ_LAST_ENDPOINT'/>
<enum value='17' name='ZMQ_LINGER'/>
<enum value='22' name='ZMQ_MAXMSGSIZE'/>
<enum value='2' name='ZMQ_MAX_SOCKETS'/>
<enum value='1024' name='ZMQ_MAX_SOCKETS_DFLT'/>
<enum value='1' name='ZMQ_MORE'/>
<enum value='25' name='ZMQ_MULTICAST_HOPS'/>
<enum value='0' name='ZMQ_PAIR'/>
<enum value='4' name='ZMQ_POLLERR'/>
<enum value='1' name='ZMQ_POLLIN'/>
<enum value='2' name='ZMQ_POLLOUT'/>
<enum value='1' name='ZMQ_PUB'/>
<enum value='7' name='ZMQ_PULL'/>
<enum value='8' name='ZMQ_PUSH'/>
<enum value='3' name='ZMQ_QUEUE'/>
<enum value='8' name='ZMQ_RATE'/>
<enum value='12' name='ZMQ_RCVBUF'/>
<enum value='24' name='ZMQ_RCVHWM'/>
<enum value='13' name='ZMQ_RCVMORE'/>
<enum value='27' name='ZMQ_RCVTIMEO'/>
<enum value='18' name='ZMQ_RECONNECT_IVL'/>
<enum value='21' name='ZMQ_RECONNECT_IVL_MAX'/>
<enum value='9' name='ZMQ_RECOVERY_IVL'/>
<enum value='4' name='ZMQ_REP'/>
<enum value='3' name='ZMQ_REQ'/>
<enum value='6' name='ZMQ_ROUTER'/>
<enum value='11' name='ZMQ_SNDBUF'/>
<enum value='23' name='ZMQ_SNDHWM'/>
<enum value='2' name='ZMQ_SNDMORE'/>
<enum value='28' name='ZMQ_SNDTIMEO'/>
<enum value='1' name='ZMQ_STREAMER'/>
<enum value='2' name='ZMQ_SUB'/>
<enum value='6' name='ZMQ_SUBSCRIBE'/>
<enum value='38' name='ZMQ_TCP_ACCEPT_FILTER'/>
<enum value='34' name='ZMQ_TCP_KEEPALIVE'/>
<enum value='35' name='ZMQ_TCP_KEEPALIVE_CNT'/>
<enum value='36' name='ZMQ_TCP_KEEPALIVE_IDLE'/>
<enum value='37' name='ZMQ_TCP_KEEPALIVE_INTVL'/>
<enum value='16' name='ZMQ_TYPE'/>
<enum value='7' name='ZMQ_UNSUBSCRIBE'/>
<enum value='30200' name='ZMQ_VERSION'/>
<enum value='3' name='ZMQ_VERSION_MAJOR'/>
<enum value='2' name='ZMQ_VERSION_MINOR'/>
<enum value='0' name='ZMQ_VERSION_PATCH'/>
<enum value='9' name='ZMQ_XPUB'/>
<enum value='6' name='ZMQ_XREP'/>
<enum value='5' name='ZMQ_XREQ'/>
<enum value='10' name='ZMQ_XSUB'/>
<function name='loklok'>
<arg name='p' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pollitem_damn'>
<arg const='true' name='p' declared_type='char*' type='*'/>
<arg name='bytes' declared_type='int' type='i'/>
<retval declared_type='PollItem_' type='{_PollItem_=^viss}'/>
</function>
<function name='pollitem_pfd'>
<arg name='p' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pollitem_ppp'>
<arg name='p' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pollitem_sizeof'>
<retval declared_type='int' type='i'/>
</function>
<function name='size_t_sizeof'>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_bind'>
<arg name='s' declared_type='void*' type='^v'/>
<arg const='true' name='addr' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_close'>
<arg name='s' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_connect'>
<arg name='s' declared_type='void*' type='^v'/>
<arg const='true' name='addr' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_create_buffer'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='zmq_ctx_destroy'>
<arg name='context' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_ctx_get'>
<arg name='context' declared_type='void*' type='^v'/>
<arg name='option' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_ctx_new'>
<retval declared_type='void*' type='^v'/>
</function>
<function name='zmq_ctx_set'>
<arg name='context' declared_type='void*' type='^v'/>
<arg name='option' declared_type='int' type='i'/>
<arg name='optval' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_ctx_set_monitor'>
<arg name='context' declared_type='void*' type='^v'/>
<arg name='monitor' declared_type='zmq_monitor_fn*' type='^?' function_pointer='true'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='zmq_event_data_t*' type='^(?={?=*i}{?=*i}{?=*i}{?=*i}{?=*i}{?=*i}{?=*i}{?=*i}{?=*i}{?=*i})'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_device'>
<arg name='device' declared_type='int' type='i'/>
<arg name='insocket' declared_type='void*' type='^v'/>
<arg name='outsocket' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_disconnect'>
<arg name='s' declared_type='void*' type='^v'/>
<arg const='true' name='addr' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_errno'>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_free'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='zmq_getsockopt'>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='option' declared_type='int' type='i'/>
<arg name='optval' declared_type='void*' type='^v'/>
<arg name='optvallen' declared_type='size_t*' type='^I'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_init'>
<arg name='io_threads' declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='zmq_int_sendmsg'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_close'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_copy'>
<arg name='dest' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='src' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_data'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='zmq_msg_get'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='option' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_init'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_init_data'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='data' declared_type='void*' type='^v'/>
<arg name='size' declared_type='size_t' type='L'/>
<arg name='ffn' declared_type='zmq_free_fn*' type='^?' function_pointer='true'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='hint' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_init_size'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='size' declared_type='size_t' type='L'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_more'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_move'>
<arg name='dest' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='src' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_recv'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_send'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_set'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='option' declared_type='int' type='i'/>
<arg name='optval' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_msg_size'>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<retval declared_type='size_t' type='L'/>
</function>
<function name='zmq_pointer_to_int'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_poll'>
<arg name='items' declared_type='zmq_pollitem_t*' type='^{_zmq_pollitem_t=^viss}'/>
<arg name='nitems' declared_type='int' type='i'/>
<arg name='timeout' declared_type='long' type='l'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_pollitem_memcpy'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='PollItem_' type='{_PollItem_=^viss}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='zmq_recv'>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='buf' declared_type='void*' type='^v'/>
<arg name='len' declared_type='size_t' type='L'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_recviov'>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='iov' declared_type='struct iovec*' type='^{iovec=}'/>
<arg name='count' declared_type='size_t*' type='^I'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_recvmsg'>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_send'>
<arg name='s' declared_type='void*' type='^v'/>
<arg const='true' name='buf' declared_type='void*' type='^v'/>
<arg name='len' declared_type='size_t' type='L'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_sendiov'>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='iov' declared_type='struct iovec*' type='^{iovec=}'/>
<arg name='count' declared_type='size_t' type='L'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_sendmsg'>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='msg' declared_type='zmq_msg_t*' type='^{_zmq_msg_t=[32C]}'/>
<arg name='flags' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_setsockopt'>
<arg name='s' declared_type='void*' type='^v'/>
<arg name='option' declared_type='int' type='i'/>
<arg const='true' name='optval' declared_type='void*' type='^v'/>
<arg name='optvallen' declared_type='size_t' type='L'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_sleep'>
<arg name='seconds_' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='zmq_socket'>
<arg declared_type='void*' type='^v'/>
<arg name='type' declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='zmq_stopwatch_start'>
<retval declared_type='void*' type='^v'/>
</function>
<function name='zmq_stopwatch_stop'>
<arg name='watch_' declared_type='void*' type='^v'/>
<retval declared_type='unsigned long' type='L'/>
</function>
<function name='zmq_strerror'>
<arg name='errnum' declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='zmq_term'>
<arg name='context' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_unbind'>
<arg name='s' declared_type='void*' type='^v'/>
<arg const='true' name='addr' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='zmq_version'>
<arg name='major' declared_type='int*' type='^i'/>
<arg name='minor' declared_type='int*' type='^i'/>
<arg name='patch' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='zmq_voidify'>
<arg name='p' declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</function>
</signatures>
